<Page
    x:Class="ProjekatOoad.Venues.View.RestoraniListDetailView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ProjekatOoad.Venues.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:ProjekatOoad.Venues.ViewModel"
    xmlns:models="using:ProjekatOoad.Venues.Model"
    xmlns:triggers="using:ProjekatOoad.Helper"
    mc:Ignorable="d" >
    <!--Primjetiti koji su sve namespace dodani
    Model i viewmodel trebaju za povezivanje
    Helper za Custom State triger BoolAndMinWidthStateTrigger klasu
    -->
    <!--Page.Transitions treba da bude prisutan na svakom Page gdje se koriste efekti navigacije 
    (drillup drilldown itd)
    -->
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition />
        </TransitionCollection>
    </Page.Transitions>
    <!--Resursi stranice koji se koriste-->
    <Page.Resources>
        <ResourceDictionary>
            <!-- Custom definirani ResourceDictionary-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MasterDetailResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!-- Mogu se definirati bilo kakvi resursi ,string int sve sto je potrebno za reuse-->
            <x:String x:Key="greeting">Hello world</x:String>
            <!--viewmodels namespace definiran u Page xmlns
            Ako ne prepoznaje RestoraniViewModel uraditi build sa viewmodels tagom upisanim bez DataType atributom
            Kad procita taj namespace tek onda unijeti DataType atribut nakon sto je build ispravan-->
            <!--Data template koji se moze reuse, iskoristiti ce se za redove liste i za podatke koristi klasu Restoran-->
            <DataTemplate x:Key="RestoraniListViewItemTemplate" x:DataType="models:Restoran">
                <!--Grid okruzen sa 10px sa svake strane-->
                    <Grid Margin="10,10,10,10">
                    <Grid.RowDefinitions>
                        <!--Zauzmi samo onoliko koliko treba visine-->
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <!--Zauzmi max sirine sto je moguce, ako ima vise kolona sa * dijeli se prostor po broju kolona-->
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                        <!--U listi prikazati samo nazive restorana-->
                    <TextBlock Text="{Binding Naziv}" FontSize="16" />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>
    
    <Grid x:Name="grid">
        <!--Jedna grupa sa svim mogucim stanjima prozora-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="GrupaStanja">
                <!--windows preko 1080 sirine je standard
                U tom slucaju samo treba sakriti buttone za prikaz search boxa jer ima prostora da je uvijek tu
                -->
                <VisualState x:Name="VelikEkran">
                    <!-- trigger je uslov da se aktivira ovaj state (moze vise states biti aktivno u isto vrijeme-->
                    <VisualState.StateTriggers>
                        <!--defaultni midwidth trigger od Windows Universal-->
                        <AdaptiveTrigger MinWindowWidth="1080"/>
                    </VisualState.StateTriggers>
                    <!-- U slucaju da je state aktivan izgled cega promijenti-->
                    <VisualState.Setters>
                        <!-- promijeniti search dugmad visibility atribut (moze bilo koji atribut ovdje) collapsed ce ih sakriti-->
                        <Setter Target="SearchCloseButton.Visibility" Value="Collapsed" />
                        <Setter Target="SearchOpenButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <!-- Medium ekran kada se dodje ispod 1080 px sirine-->
                <VisualState x:Name="MediumEkran">
                    <VisualState.StateTriggers>
                        <!--Custom trigger ako je iskljuceno search dugme i >720px a <1080-->
                        <triggers:BoolAndMinWidthStateTrigger VrijednostKojaSePrati="{Binding SearchMode}" ZeljenaVrijednost="False" MinSirina="720" MaxSirina="1079"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--ako searchkolona grida koji ima search list i detail 0 onda ce * od detail i list zauzeti prozor pola pola-->
                        <Setter Target="SearchKolona.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <!--Isto kao i prosli samo u slucaju da je search dugme ukljuceno sakriti list a prikazati searchbox-->
                <VisualState x:Name="MediumEkranSearchOpened">
                    <VisualState.StateTriggers>
                        <!--Atributi odgovaraju vrijednostima u BoolAndMinWidthStateTrigger-->
                        <triggers:BoolAndMinWidthStateTrigger VrijednostKojaSePrati="{Binding SearchMode}" ZeljenaVrijednost="True" MinSirina="720" MaxSirina="1079"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterKolona.Width" Value="0" />
                        <Setter Target="SearchKolona.Width" Value="*" />
                    </VisualState.Setters>
                </VisualState>
                <!--Isto za mali ekran samo detail sakriven-->
                <VisualState x:Name="MaliEkran">
                        <VisualState.StateTriggers>
                        <triggers:BoolAndMinWidthStateTrigger VrijednostKojaSePrati="{Binding SearchMode}" ZeljenaVrijednost="False" MinSirina="0" MaxSirina="720"/>
                        </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SearchKolona.Width" Value="0" />
                        <Setter Target="DetailKolona.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MaliEkranSearchOpened">
                    <VisualState.StateTriggers>
                        <triggers:BoolAndMinWidthStateTrigger VrijednostKojaSePrati="{Binding SearchMode}" ZeljenaVrijednost="True" MinSirina="0" MaxSirina="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterKolona.Width" Value="0" />
                        <Setter Target="SearchKolona.Width" Value="*" />
                        <Setter Target="DetailKolona.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--Potrebni nazivi kolona za visual state triggere-->
            <ColumnDefinition x:Name="SearchKolona" Width="*"/>
            <ColumnDefinition x:Name="MasterKolona" Width="*"/>
            <ColumnDefinition x:Name="DetailKolona" Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid  Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition x:Name="MenuButtonRow" Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--Stil search buttona definiran u MasterDetailResources-->
            <Button x:Name="SearchOpenButton" Content="Menu" Style="{StaticResource redButtonStyle}" HorizontalAlignment="Stretch" Margin="5,5,5,5"  VerticalAlignment="Top" Command="{Binding OpenSearchCommand}"/>
            <ListView
            x:Name="RestoraniListView"
            ItemTemplate="{StaticResource RestoraniListViewItemTemplate}"
            IsItemClickEnabled="True"
            ItemsSource="{Binding Restorani}"
            ItemClick="MasterListView_ItemClick"
            Grid.Row="1"
            >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
        <!--Search box-->
        <!--template definiran u masterdetailresource-->
        <StackPanel Grid.Column="0">
            <!--U content presenter se moze dodati data template i na taj nacin reusati na vise mjesta-->
            <ContentPresenter
            x:Name="SearchContentPresenter"
            BorderThickness="1,0,0,0"
            Padding="24,0"
            ContentTemplate="{StaticResource SearchRestoraniTemplate}">
                <ContentPresenter.ContentTransitions>
                    <TransitionCollection />
                </ContentPresenter.ContentTransitions>
            </ContentPresenter>
            <Button x:Name="SearchCloseButton" Content="CloseSearch" HorizontalAlignment="Stretch" Margin="5,5,5,5"  VerticalAlignment="Top" Command="{Binding CloseSearchCommand}"/>
        </StackPanel>
        
        <ContentPresenter
            x:Name="DetailContentPresenter"
            BorderThickness="1,0,0,0"
            Padding="24,0"
            ContentTemplate="{StaticResource RestoraniDetailViewTemplate}" Grid.Column="2"
            Content="{x:Bind RestoraniListView.SelectedItem}">
            <ContentPresenter.ContentTransitions>
                <TransitionCollection />
            </ContentPresenter.ContentTransitions>
        </ContentPresenter>
    </Grid>
</Page>
